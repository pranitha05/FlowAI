from langchain_google_genai import ChatGoogleGenerativeAI

def generate_to_do_list(api_key, user_input):
    """
    Generates a detailed to-do list based on user input using the Gemini model.

    Args:
        api_key (str): The API key for the Google Generative AI.
        user_input (str): The user's prompt or request.

    Returns:
        str: A detailed to-do list generated by the AI.
    """
    # Initialize the LLM with the API key
    llm = ChatGoogleGenerativeAI(
        model="gemini-1.5-pro",
        api_key=api_key,
        temperature=0,
        max_tokens=None,
        timeout=None,
        max_retries=2,
    )

    # Prepare the AI prompt
    prompt = f"""
    You are FlowAI, an AI-powered productivity assistant. Based on the user's request:
    {user_input}

    Create a detailed to-do list with 6-7 bullet points for each segment needed. Each point should be short, actionable, and clearly instruct the user on what to do. Ensure the tasks cover all relevant details of the user's request and are well-organized.
    """

    # Construct the message for the LLM
    messages = [{"role": "user", "content": prompt}]

    try:
        # Invoke the LLM and return the response
        response = llm.invoke(messages)
        return response.content
    except Exception as e:
        raise RuntimeError(f"Failed to generate to-do list: {e}")
